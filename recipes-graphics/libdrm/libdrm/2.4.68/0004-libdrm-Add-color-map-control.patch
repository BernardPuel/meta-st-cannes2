From 678e6f68e767500bc33d1ac9ac07a110f458143e Mon Sep 17 00:00:00 2001
From: Christophe Priouzeau <christophe.priouzeau@st.com>
Date: Thu, 1 Sep 2016 17:29:16 +0200
Subject: [PATCH 4/4] libdrm: Add color map control

Color map is used for color index format, like C8 4cc pixel format.

Change-Id: I847705fa12d10659abccaa054cccca42e6302aa5
Signed-off-by: Fabien Dessenne <fabien.dessenne@st.com>
---
 include/drm/drm.h      |  2 ++
 include/drm/drm_mode.h |  1 +
 xf86drmMode.c          | 31 +++++++++++++++++++++++++++++++
 xf86drmMode.h          |  5 +++++
 4 files changed, 39 insertions(+)

diff --git a/include/drm/drm.h b/include/drm/drm.h
index b4ebaa9..100dde6 100644
--- a/include/drm/drm.h
+++ b/include/drm/drm.h
@@ -794,6 +794,8 @@ struct drm_prime_handle {
 #define DRM_IOCTL_MODE_ATOMIC		DRM_IOWR(0xBC, struct drm_mode_atomic)
 #define DRM_IOCTL_MODE_CREATEPROPBLOB	DRM_IOWR(0xBD, struct drm_mode_create_blob)
 #define DRM_IOCTL_MODE_DESTROYPROPBLOB	DRM_IOWR(0xBE, struct drm_mode_destroy_blob)
+#define DRM_IOCTL_MODE_GETCMAP		DRM_IOWR(0xBF, struct drm_mode_crtc_lut)
+#define DRM_IOCTL_MODE_SETCMAP		DRM_IOWR(0xC0, struct drm_mode_crtc_lut)
 
 /**
  * Device specific ioctls should only be in their respective headers
diff --git a/include/drm/drm_mode.h b/include/drm/drm_mode.h
index 72fabb0..c30e9b0 100644
--- a/include/drm/drm_mode.h
+++ b/include/drm/drm_mode.h
@@ -149,6 +149,7 @@ struct drm_mode_crtc {
 	__u32 y; /**< y Position on the framebuffer */
 
 	__u32 gamma_size;
+	__u32 cmap_size;
 	__u32 mode_valid;
 	struct drm_mode_modeinfo mode;
 };
diff --git a/xf86drmMode.c b/xf86drmMode.c
index f7b5948..0d09b21 100644
--- a/xf86drmMode.c
+++ b/xf86drmMode.c
@@ -370,6 +370,7 @@ drmModeCrtcPtr drmModeGetCrtc(int fd, uint32_t crtcId)
 	}
 	r->buffer_id       = crtc.fb_id;
 	r->gamma_size      = crtc.gamma_size;
+	r->cmap_size       = crtc.cmap_size;
 	return r;
 }
 
@@ -870,6 +871,36 @@ int drmModeCrtcSetGamma(int fd, uint32_t crtc_id, uint32_t size,
 	return DRM_IOCTL(fd, DRM_IOCTL_MODE_SETGAMMA, &l);
 }
 
+int drmModeCrtcGetCmap(int fd, uint32_t crtc_id, uint32_t size,
+		       uint16_t *red, uint16_t *green, uint16_t *blue)
+{
+	struct drm_mode_crtc_lut l;
+
+	memclear(l);
+	l.crtc_id = crtc_id;
+	l.gamma_size = size;
+	l.red = VOID2U64(red);
+	l.green = VOID2U64(green);
+	l.blue = VOID2U64(blue);
+
+	return DRM_IOCTL(fd, DRM_IOCTL_MODE_GETCMAP, &l);
+}
+
+int drmModeCrtcSetCmap(int fd, uint32_t crtc_id, uint32_t size,
+		       uint16_t *red, uint16_t *green, uint16_t *blue)
+{
+	struct drm_mode_crtc_lut l;
+
+	memclear(l);
+	l.crtc_id = crtc_id;
+	l.gamma_size = size;
+	l.red = VOID2U64(red);
+	l.green = VOID2U64(green);
+	l.blue = VOID2U64(blue);
+
+	return DRM_IOCTL(fd, DRM_IOCTL_MODE_SETCMAP, &l);
+}
+
 int drmHandleEvent(int fd, drmEventContextPtr evctx)
 {
 	char buffer[1024];
diff --git a/xf86drmMode.h b/xf86drmMode.h
index 4de7bbb..ca23121 100644
--- a/xf86drmMode.h
+++ b/xf86drmMode.h
@@ -259,6 +259,7 @@ typedef struct _drmModeCrtc {
 	drmModeModeInfo mode;
 
 	int gamma_size; /**< Number of gamma stops */
+	int cmap_size; /**< Number of cmap entries */
 
 } drmModeCrtc, *drmModeCrtcPtr;
 
@@ -464,6 +465,10 @@ extern int drmModeCrtcSetGamma(int fd, uint32_t crtc_id, uint32_t size,
 			       uint16_t *red, uint16_t *green, uint16_t *blue);
 extern int drmModeCrtcGetGamma(int fd, uint32_t crtc_id, uint32_t size,
 			       uint16_t *red, uint16_t *green, uint16_t *blue);
+extern int drmModeCrtcSetCmap(int fd, uint32_t crtc_id, uint32_t size,
+			      uint16_t *red, uint16_t *green, uint16_t *blue);
+extern int drmModeCrtcGetCmap(int fd, uint32_t crtc_id, uint32_t size,
+			      uint16_t *red, uint16_t *green, uint16_t *blue);
 extern int drmModePageFlip(int fd, uint32_t crtc_id, uint32_t fb_id,
 			   uint32_t flags, void *user_data);
 
-- 
1.9.1

